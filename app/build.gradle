apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'

android {
    compileSdkVersion(compileSdk)
    buildToolsVersion(buildTools)

    defaultConfig {
        applicationId = "info.dvkr.screenstream"
        minSdkVersion(minSdk)
        targetSdkVersion(targetSdk)
        versionCode = 30108
        versionName = "3.1.8"
        resConfigs("en", "ru", "pt-rBR", "zh-rTW", "fr-rFR", "fa", "it", "pl", "hi", "de")

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        fabric {

        }

        fabricfree {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        fabric.java.srcDirs += 'src/fabric/kotlin'
        fabricDebug.java.srcDirs += 'src/fabricDebug/kotlin'
        fabricRelease.java.srcDirs += 'src/fabricRelease/kotlin'

        fabricfree.java.srcDirs += 'src/fabricfree/kotlin'
        fabricfreeDebug.java.srcDirs += 'src/fabricfreeDebug/kotlin'
        fabricfreeRelease.java.srcDirs += 'src/fabricfreeRelease/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }
}

androidExtensions { experimental = true }

dependencies {
    implementation project(':data')

    implementation("org.jetbrains:annotations:$jetbrainsAnnotations")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion")

    implementation("androidx.annotation:annotation:$androidxAnnotation")
    implementation("com.google.android.material:material:$androidMaterial")
    implementation("androidx.appcompat:appcompat:$androidxAppcompat")
    implementation("androidx.constraintlayout:constraintlayout:$androidxConstraint")
    implementation("androidx.navigation:navigation-fragment-ktx:$androidxNavigation")
    implementation("androidx.navigation:navigation-ui-ktx:$androidxNavigation")
    implementation("androidx.viewpager2:viewpager2:1.0.0-beta03")

    implementation("com.afollestad.material-dialogs:core:$materialDialogs")
    implementation("com.afollestad.material-dialogs:color:$materialDialogs")
    implementation("com.afollestad.material-dialogs:input:$materialDialogs")
//    implementation("com.afollestad.material-dialogs:bottomsheets:$materialDialogs")
    implementation("com.afollestad.material-dialogs:lifecycle:$materialDialogs")

    implementation("org.koin:koin-android:$koin")
    implementation("com.github.iamironz:binaryprefs:$binaryprefs")
    implementation("com.elvishew:xlog:$xlog")

    fabricImplementation("com.google.android.play:core:$playCore")
    fabricReleaseImplementation("com.google.firebase:firebase-core:$firebaseCore")
    fabricReleaseImplementation("com.crashlytics.sdk.android:crashlytics:$fabricCrashlytics")

    debugImplementation("com.squareup.leakcanary:leakcanary-android:$leakcanary")
}

apply plugin: "com.google.gms.google-services"

android.applicationVariants.all { variant ->
    if (variant.name == "fabricfreeDebug" || variant.name == "fabricfreeRelease") {
        project.tasks.getByName("process" + variant.name.capitalize() + "GoogleServices").enabled = false
    }
}